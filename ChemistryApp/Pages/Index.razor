@page "/"
@using Chemistry.Common.Classes
@using Chemistry.Common.Enums;
@using Chemistry.Common.Interfaces;

<PageTitle>Substances</PageTitle>

<h1>Substances</h1>

<div class="container-width">
    @if (error != string.Empty)
    {
        <div class="mb-4 alert alert-danger">
            <strong>Error</strong> @error
        </div>
    }
    <div class="input-group mb-4">
        <input type="text" class="form-control" placeholder="Substance" @bind="@substance" />
        <input type="text" class="form-control" placeholder="Mass" @bind="@newMass" />
        <select class="form-select" @bind="@state">
            @foreach (var state in chemistry.StateNames)
            {
                <option value="@state">@state</option>
            }
        </select>
        <button class="btn btn-outline-primary btn-padding" @onclick="AddSubstance">Add</button>
    </div>
    <div class="btn-group w-100">
        <button class="btn btn-outline-primary" @onclick="( e => GetState(States.Solid))">Solid</button>
        <button class="btn btn-outline-primary" @onclick="( e => GetState(States.Liquid))">Liquid</button>
        <button class="btn btn-outline-primary" @onclick="( e => GetState(States.Gas))">Gas</button>
        <button class="btn btn-outline-primary" @onclick="( e => GetState(States.Plasma))">Plasma</button>
        <button class="btn btn-outline-primary" @onclick="GetAll">All</button>
    </div>
    <ul class="list-group">
        @foreach (var substance in substances)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @substance.SubstanceName (@substance.Mass)
                <span class="badge bg-secondary">@substance.State</span>
            </li>
        }
    </ul>


</div>

@code{
    string error = string.Empty;
    string substance = string.Empty;
    string newMass = string.Empty;
    string state = string.Empty;

    Chemistry chemistry = new();
    List<ISubstance> substances = new();
    protected override void OnInitialized() => GetAll();
    void AddSubstance ()
    {
        try
        {
            error = string.Empty;
            var mass = double.Parse(newMass);
            chemistry.AddSubstance(substance, mass, state);
            substance = string.Empty;
            newMass = string.Empty;
            state = string.Empty;
        }
        catch
        {
            error = "Could not add the substance";
        }
    }
    void GetAll()
    {
        error = string.Empty;
        substances = chemistry.GetSubstances();
    }
    void GetState(States state)
    {
        error = string.Empty;
        substances = chemistry.GetSubstances(s => s.State.Equals(state));
    }

}
